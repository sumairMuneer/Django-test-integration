# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: 
  push:
    branches:
      - master
      - stage
      - dev
  pull_request:
    branches:
      - dev 
    # branches-ignore:
    #   - master
    #   - stage

jobs:
  unit-testing:
    # if: github.ref != 'refs/heads/stage'
    if: ${{ (github.ref != 'refs/heads/master') && (github.ref != 'refs/heads/stage')&& (github.ref != 'refs/heads/dev') }}
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # - python -m pip install --upgrade pip
      - name: Install pipenv, libpq, and pandoc
        run: |
          sudo apt-get install libpq-dev -y
          pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: |
          pipenv --python 3.8 install setuptools==56.0.0
          pipenv install flake8
          pipenv --python 3.8 run pip install --no-deps -r requirements.txt

      - run : pipenv --python 3.8 run pip install pytest

      - name: Open Web Client Directory
        # working-directory: ./mysite
        run: |
          ls -la
          echo "event name is:" ${{ github.event_name }} 
          echo "event type is:" ${{ github.event.action }}
          pipenv --python 3.8 run python manage.py test  polls.tests 

      # to run test cases of multiple apps    
          # pipenv --python 3.8 run python manage.py test app_1.tests polls.tests 
  deoloy:
    # if: github.ref == 'refs/heads/master'
    # if: ${{ (github.event_name != 'pull_request') && ((github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/stage') || (github.ref == 'refs/heads/dev')) }}
    # if: in(github.ref, 'refs/heads/master','refs/heads/stage', 'refs/heads/dev') 
    # if: ${{ github.event_name == 'push' }}
    # if: ${{ (github.event.pull_request.merged == true && (github.event.pull_request.head.ref == 'master' || github.event.pull_request.head.ref == 'stage' || github.event.pull_request.head.ref == 'dev')) }}
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Open Web Client Directory
        # working-directory: ./mysite
        run: |
          ls -la
          echo "event name is:" ${{ github.event.pull_request }} 
          echo "event name is:" ${{ github.event.pull_request.merged }} 
          echo "event type is:" ${{ github.event.pull_request.head.ref }}

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     # branches: [ "master" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.8.6
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.8.6"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
